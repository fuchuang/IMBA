<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.IMBA.dao.video_seriesMapper" >
  <resultMap id="BaseResultMap" type="com.IMBA.entity.video_series" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_lecturer" property="courseLecturer" jdbcType="VARCHAR" />
    <result column="course_title" property="courseTitle" jdbcType="VARCHAR" />
    <result column="course_type" property="courseType" jdbcType="VARCHAR" />
    <result column="watching_num" property="watchingNum" jdbcType="INTEGER" />
      <result column="video_screenshots_path" property="video_screenshots_path" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="videolistmodelBaseResultMap" type="com.IMBA.model.videolistmodel">
    <id column="video_series_id" property="id" jdbcType="INTEGER"></id>
    <result  column="course_lecturer" property="course_lecturer" jdbcType="VARCHAR"></result>
    <result column="course_title" property="course_title" jdbcType="VARCHAR" />

    <collection property="videomodels" ofType="com.IMBA.model.videomodel">
      <id column="id" property="video_id"></id>
      <result column="video_title" property="video_title"></result>
    </collection>

  </resultMap>

  <resultMap id="videowatchnumsrankBaseResultMap" type="com.IMBA.model.videowatchnumsrank">
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="course_title" property="course_title" jdbcType="VARCHAR" />
    <result column="watching_num" property="watching_num" jdbcType="INTEGER" />
  </resultMap>

  <resultMap id="adminlikemsgmodelBaseResultMap" type="com.IMBA.model.adminlikemsgmodel">
    <id column="video_series_id" property="video_series_id" jdbcType="INTEGER" />
    <result column="course_title" property="course_title" jdbcType="VARCHAR" />
    <result column="count" property="count" jdbcType="INTEGER" />
  </resultMap>


  <sql id="Base_Column_List" >
    id, course_lecturer, course_title, course_type, watching_num ,video_screenshots_path
  </sql>

  <select id="findvideo_seriesListbycollection_stu_id" parameterType="int" resultMap="BaseResultMap">
    select vs.course_lecturer,vs.id,vs.course_title,vs.watching_num,vs.video_screenshots_path,vs.course_type  from video_series vs,video_collections vc where vc.student_id=#{0} and vc.video_series_id=vs.id
  </select>
  <select id="findvideo_seriesListbyrecord_stu_id" parameterType="int" resultMap="BaseResultMap">
    select  vs.course_lecturer,vs.id,vs.course_title,vs.watching_num,vs.video_screenshots_path,vs.course_type from video_series vs,video_record vr ,video v where vr.student_id=#{0} and vr.video_id=v.id and  v.video_series_id=vs.id
group by vs.id
</select>



  <select id="findvideoList" resultMap="videolistmodelBaseResultMap">
    select vs.course_lecturer ,vs.course_title,vs.id video_series_id,
    v.video_title,v.id from video_series vs, video v where v.video_series_id=#{0} and v.video_series_id=vs.id
  </select>

  <select id="findvideo_seriesList" resultMap="BaseResultMap">
    select * from video_series where course_type=#{0}
  </select>

<update id="updatewathing_num" parameterType="int">
  update video_series  set watching_num=watching_num+1 where  id=#{0}
</update>

  <select id="findbywatchnums" resultMap="videowatchnumsrankBaseResultMap">
    select course_title , watching_num,id from video_series order by watching_num desc
  </select>

  <select id="findlikenums" resultMap="adminlikemsgmodelBaseResultMap">
    select vsk.video_series_id,vs.course_title,count(*) as count from video_series_like vsk ,video_series vs where vs.id=vsk.video_series_id group by vsk.video_series_id having count>=1 order by count desc ;
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from video_series
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from video_series
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.IMBA.entity.video_series" >
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>

    insert into video_series (id, course_lecturer, course_title, 
      course_type, watching_num)
    values (#{id,jdbcType=INTEGER}, #{courseLecturer,jdbcType=VARCHAR}, #{courseTitle,jdbcType=VARCHAR}, 
      #{courseType,jdbcType=VARCHAR}, #{watchingNum,jdbcType=INTEGER},, #{video_screenshots_path,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.IMBA.entity.video_series" >
    insert into video_series
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="courseLecturer != null" >
        course_lecturer,
      </if>
      <if test="courseTitle != null" >
        course_title,
      </if>
      <if test="courseType != null" >
        course_type,
      </if>
      <if test="watchingNum != null" >
        watching_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="courseLecturer != null" >
        #{courseLecturer,jdbcType=VARCHAR},
      </if>
      <if test="courseTitle != null" >
        #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="watchingNum != null" >
        #{watchingNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.IMBA.entity.video_series" >
    update video_series
    <set >
      <if test="courseLecturer != null" >
        course_lecturer = #{courseLecturer,jdbcType=VARCHAR},
      </if>
      <if test="courseTitle != null" >
        course_title = #{courseTitle,jdbcType=VARCHAR},
      </if>
      <if test="courseType != null" >
        course_type = #{courseType,jdbcType=VARCHAR},
      </if>
      <if test="watchingNum != null" >
        watching_num = #{watchingNum,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.IMBA.entity.video_series" >
    update video_series
    set course_lecturer = #{courseLecturer,jdbcType=VARCHAR},
      course_title = #{courseTitle,jdbcType=VARCHAR},
      course_type = #{courseType,jdbcType=VARCHAR},
      watching_num = #{watchingNum,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>